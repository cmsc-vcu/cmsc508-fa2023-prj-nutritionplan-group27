---
title: Homework 8 - using an API
author: Zachariah Dellimore
date: last-modified
format:
    html:
        theme: cosmos
        toc: true
        html-math-method: katex
        embed-resources: true
        copy-code: true
---
Description

# Background

[Our API](https://rickandmortyapi.com) is a RESTful web service that provides information about the characters, locations, and episodes from the ["Rick and Morty"](https://www.adultswim.com/videos/rick-and-morty) animated television series. It's designed to allow developers to query and retrieve data programmatically, which makes it an excellent tool for educational purposes, fan projects, or applications that require information from the show's universe.

Here's an overview of the main features of the API:

List features

# Exercises

Examples of api usage

```{python}
#| eval: true
#| echo: false
import os
import requests
from IPython.display import HTML
```

## Example 1: Basic API Request

**Objective:** Retrieve and print the first 5 users from the API.

```{python}
#| eval: true
#| echo: false
# Use requests to perform a GET request to the API.
headers = {
    'username': 'dellimorez',
    'password': 'password1'
}

res = requests.get("http://localhost:5000/users", headers=headers)

# Parse the JSON response to print the names of the first 5 characters.
if res.status_code == 200:
    data = res.json()
    for user in data['results'][:5]:
        print(user['username'])
```

## Example 2: Handling Pagination

**Objective:** Retrieve and print the names of all recipes that appear on the first 3 pages of the API results.

```{python}
#| eval: true
#| echo: false
names = []

headers = {
    'username': 'dellimorez',
    'password': 'password1'
}

# Loop through the first three pages.
for page in range(3):
    # Perform a GET request to retrieve information about characters on the current page.
    page_response = requests.get(f"http://localhost:5000/recipes?page={page+1}", headers=headers)
    
    # Check if the request was successful.
    if page_response.status_code == 200:
        page_data = page_response.json()
        for recipe in page_data['results']:
            names.append(recipe['name'])

# Print all character names.
for name in names:
    print(name)
```

## Exercise 3: Query Parameters

**Objective:** Find and print all recipes with the ingredient chicken.

**Concepts:** Utilizing query parameters, conditional logic.
```{python}
#| eval: true
#| echo: false

url = "http://localhost:5000/recipes/ingredients"

headers = {
    'username': 'dellimorez',
    'password': 'password1',
    'search': 'chicken'
}

recipes = []

nextPage = url

while nextPage is not None:
    res = requests.get(nextPage, headers=headers)

    if res.status_code == 200:
        data = res.json()

        recipes.append([recipe for recipe in data['results']])
        
        if 'next' in data:
            nextPage = data['next']
        else:
            nextPage = None
    else: 
        break

# print names
for recipe in recipes:
    print(recipe[0]['name'])
```
